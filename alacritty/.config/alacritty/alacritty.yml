env:
  TERM: alacritty

window:
  dynamic_title: true

  opacity: 0.99

  padding:
    x: 5
    y: 5

  # Spread additional padding evenly around the terminal content.
  dynamic_padding: false

  title: Alacritty
  class:
    instance: Alacritty
    general: Alacritty


scrolling:
  history: 10000
  multiplier: 2

font:
  normal:
    family: Cascadia Code
    style: Medium
  bold:
    family: Cascadia Code
    style: Bold
  italic:
    family: Cascadia Code
    style: Italic
  bold_italic:
    family: Cascadia Code
    style: Bold Italic

  # Point size
  size: 16.0

  # Offset is the extra space around each character. `offset.y` can be thought of
  # as modifying the line spacing, and `offset.x` as modifying the letter spacing.
  offset:
    x: -1
    y: -1

  glyph_offset:
    x: 0
    y: 0

draw_bold_text_with_bright_colors: false

colors:
  # Default colors
  primary:
    background: '#292828'
    foreground: '#dfbf8e'

  # Colors the cursor will use if `custom_cursor_colors` is true
  cursor:
    text: '#1d2021'
    cursor: '#d5c4a1'

  vi_mode_cursor:
    text: CellBackground
    cursor: CellForeground
  selection:
    text: '#191919'
    background: '#d8dee9'

  dim:
    black: '#676f78'
    red: '#b55454'
    green: '#78a670'
    yellow: '#faf380'
    blue: '#707fd0'
    magenta: '#c583d0'
    cyan: '#8adaf1'
    white: '#e0e3e7'


  normal:
    black:   '#665c54'
    red:     '#ea6962'
    green:   '#a9b665'
    yellow:  '#e78a4e'
    blue:    '#7daea3'
    magenta: '#d3869b'
    cyan:    '#89b482'
    white:   '#dfbf8e'

  bright:
    black:   '#928374'
    red:     '#ea6962'
    green:   '#a9b665'
    yellow:  '#e3a84e'
    blue:    '#7daea3'
    magenta: '#d3869b'
    cyan:    '#89b482'
    white:   '#dfbf8e'



cursor:
  style: Block
  unfocused_hollow: true
  vi_mode_style: Block

live_config_reload: true

mouse:
  double_click: {threshold: 300}
  triple_click: {threshold: 300}

  hints:
    # URL launcher
    #
    # This program is executed when clicking on a text which is recognized as a URL.
    # The URL is always added to the command as the last parameter.
    #
    # When set to `None`, URL launching will be disabled completely.
    #
    # Default:
    #   - (macOS) open
    #   - (Linux/BSD) xdg-open
    #   - (Windows) explorer
    launcher:
      program: xdg-open
      args: []

mouse_bindings:
  - {mouse: Middle, action: Copy}

# Key bindings
#
# Key bindings are specified as a list of objects. For example, this is the
# default paste binding:
#
# `- { key: V, mods: Control|Shift, action: Paste }`
#
# Each key binding will specify a:
#
# - `key`: Identifier of the key pressed
#
#    - A-Z
#    - F1-F24
#    - Key0-Key9
#
#    A full list with available key codes can be found here:
#    https://docs.rs/glutin/*/glutin/event/enum.VirtualKeyCode.html#variants
#
#    Instead of using the name of the keys, the `key` field also supports using
#    the scancode of the desired key. Scancodes have to be specified as a
#    decimal number. This command will allow you to display the hex scancodes
#    for certain keys:
#
#       `showkey --scancodes`.
#
# Then exactly one of:
#
# - `chars`: Send a byte sequence to the running application
#
#    The `chars` field writes the specified string to the terminal. This makes
#    it possible to pass escape sequences. To find escape codes for bindings
#    like `PageUp` (`"\x1b[5~"`), you can run the command `showkey -a` outside
#    of tmux. Note that applications use terminfo to map escape sequences back
#    to keys. It is therefore required to update the terminfo when changing an
#    escape sequence.
#
# - `action`: Execute a predefined action
#
#   - Copy
#   - Paste
#   - PasteSelection
#   - IncreaseFontSize
#   - DecreaseFontSize
#   - ResetFontSize
#   - ScrollPageUp
#   - ScrollPageDown
#   - ScrollLineUp
#   - ScrollLineDown
#   - ScrollToTop
#   - ScrollToBottom
#   - ClearHistory
#   - Hide
#   - Minimize
#   - Quit
#   - ToggleFullscreen
#   - SpawnNewInstance
#   - ClearLogNotice
#   - ReceiveChar
#   - None
#
#   (macOS only):
#   - ToggleSimpleFullscreen: Enters fullscreen without occupying another space
#
# - `command`: Fork and execute a specified command plus arguments
#
#    The `command` field must be a map containing a `program` string and an
#    `args` array of command line parameter strings. For example:
#       `{ program: "alacritty", args: ["-e", "vttest"] }`
#
# And optionally:
#
# - `mods`: Key modifiers to filter binding actions
#
#    - Command
#    - Control
#    - Option
#    - Super
#    - Shift
#    - Alt
#
#    Multiple `mods` can be combined using `|` like this:
#       `mods: Control|Shift`.
#    Whitespace and capitalization are relevant and must match the example.
#
# - `mode`: Indicate a binding for only specific terminal reported modes
#
#    This is mainly used to send applications the correct escape sequences
#    when in different modes.
#
#    - AppCursor
#    - AppKeypad
#    - Alt
#
#    A `~` operator can be used before a mode to apply the binding whenever
#    the mode is *not* active, e.g. `~Alt`.
#
# Bindings are always filled by default, but will be replaced when a new
# binding with the same triggers is defined. To unset a default binding, it can
# be mapped to the `ReceiveChar` action. Alternatively, you can use `None` for
# a no-op if you do not wish to receive input characters for that binding.
#
# If the same trigger is assigned to multiple actions, all of them are executed
# at once.
key_bindings:
  # (Windows, Linux, and BSD only)
  - {key: P, mods: Control, action: Paste}
  - {key: Insert, mods: Shift, action: Paste}
  - {key: Slash, mods: Control, chars: gc}
  - {key: Y, mods: Control, action: Copy}
  - {key: Key0, mods: Control, action: ResetFontSize}
  - {key: Plus, mods: Control, action: IncreaseFontSize}
  - {key: Minus, mods: Control, action: DecreaseFontSize}

debug:
  # Display the time it takes to redraw each frame.
  render_timer: false

  # Keep the log file after quitting Alacritty.
  persistent_logging: false

  # Log level
  #
  # Values for `log_level`:
  #   - None
  #   - Error
  #   - Warn
  #   - Info
  #   - Debug
  #   - Trace
  log_level: Warn

  # Print all received window events.
  print_events: false

